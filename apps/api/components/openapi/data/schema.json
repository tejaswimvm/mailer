{
    "openapi": "3.0.0",
    "info": {
        "title": [
            "[SITE_NAME]"
        ],
        "description": [
            "[SITE_DESCRIPTION]"
        ],
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": [
                "[API_URL]"
            ],
            "description": [
                "[SITE_DESCRIPTION]"
            ]
        }
    ],
    "paths": {
        "api/campaign/{campaign_uid}/bounces": {},
        "api/campaign/{campaign_uid}/complaints": {},
        "api/campaign/{campaign_uid}/delivery-logs": {},
        "api/campaign/{campaign_uid}/unsubscribes": {},
        "api/campaigns": {},
        "api/campaign/{campaign_uid}/tracking": {},
        "api/countries": {},
        "api/customers": {},
        "api/delivery-servers": {},
        "api/lists/{list_uid}/fields": {},
        "api/lists/{list_uid}/segments": {},
        "api/lists/{list_uid}/subscribers": {},
        "api/lists": {},
        "api/templates": {},
        "api/transactional-emails": {},
        "/campaigns/{campaign_uid}/bounces": {
            "get": {
                "tags": [
                    "campaign_bounces"
                ],
                "summary": "View campaign bounces",
                "description": "View campaign bounces",
                "operationId": "viewCampaignBounces",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign bounces response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignBounceResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "campaign_bounces"
                ],
                "summary": "Create campaign bounces",
                "description": "Create campaign bounces",
                "operationId": "createCampaignBounce",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Bounce object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignBounceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Campaign bounce response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignBounceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/complaints": {
            "get": {
                "tags": [
                    "campaign_complaints"
                ],
                "summary": "View campaign complaints",
                "description": "View campaign complaints",
                "operationId": "viewCampaignComplaints",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign complaints response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignComplaintResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/delivery-logs": {
            "get": {
                "tags": [
                    "campaign_delivery_logs"
                ],
                "summary": "View campaign delivery logs",
                "description": "View campaign delivery logs",
                "operationId": "viewCampaignDeliveryLogs",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign delivery logs response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignDeliveryLogResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/email-message-id/{email_message_id}": {
            "get": {
                "tags": [
                    "campaign_delivery_logs"
                ],
                "summary": "View campaign email message",
                "description": "View campaign email message",
                "operationId": "viewCampaignEmailMessage",
                "parameters": [
                    {
                        "name": "email_message_id",
                        "in": "path",
                        "description": "Unique id of the email message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignDeliveryLogResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/unsubscribes": {
            "get": {
                "tags": [
                    "campaign_unsubscribes"
                ],
                "summary": "View campaign unsubscribes",
                "description": "View campaign unsubscribes",
                "operationId": "viewCampaignUnsubscribes",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign unsubscribes response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignUnsubscribeResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "View campaigns",
                "description": "View campaigns",
                "operationId": "viewCampaigns",
                "responses": {
                    "200": {
                        "description": "Campaigns response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Create campaign",
                "description": "Create campaign",
                "operationId": "createCampaign",
                "requestBody": {
                    "description": "Campaign object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Campaign response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "campaign_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "View campaign",
                "description": "View campaign",
                "operationId": "viewCampaign",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Update campaign",
                "description": "Update campaign",
                "operationId": "updateCampaign",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Campaign object",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Campaign update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "campaign_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete a campaign",
                "description": "Delete a campaign",
                "operationId": "deleteCampaign",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete campaign response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/copy": {
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Copy campaign",
                "description": "Copy campaign",
                "operationId": "copyCampaign",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign copy response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "campaign_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/pause-unpause": {
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Pause or unpause campaign",
                "description": "Pause or unpause campaign",
                "operationId": "pauseunpauseCampaign",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign pause or unpause response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "campaign": {
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/mark-sent": {
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Mark sent a campaign",
                "description": "Mark sent a campaign",
                "operationId": "markSentCampaign",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign mark as sent response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "campaign": {
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/stats": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Get a campaign stats",
                "description": "Get a campaign stats",
                "operationId": "campaignStats",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stats campaign response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignStatsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/track-url/{subscriber_uid}/{hash}": {
            "get": {
                "tags": [
                    "campaigns_tracking"
                ],
                "summary": "View campaign track url",
                "description": "View campaign track url",
                "operationId": "viewCampaignTrackUrl",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Url hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign track url response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignsTrackUrlResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/track-opening/{subscriber_uid}": {
            "get": {
                "tags": [
                    "campaigns_tracking"
                ],
                "summary": "Record campaign track opening",
                "description": "Record campaign track opening",
                "operationId": "recordCampaignTrackOpening",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign track opening action response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/campaigns/{campaign_uid}/track-unsubscribe/{subscriber_uid}": {
            "post": {
                "tags": [
                    "campaigns_tracking"
                ],
                "summary": "Record campaign track unsubscribe",
                "description": "Record campaign track unsubscribe",
                "operationId": "recordCampaignTrackUnsubscribe",
                "parameters": [
                    {
                        "name": "campaign_uid",
                        "in": "path",
                        "description": "Unique id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign track unsubscribe action response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "countries"
                ],
                "summary": "View countries",
                "description": "View countries",
                "operationId": "viewCountries",
                "responses": {
                    "200": {
                        "description": "Countries response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/countries/{country_id}/zones": {
            "get": {
                "tags": [
                    "countries"
                ],
                "summary": "Get a country zones",
                "description": "Get a country zones",
                "operationId": "countryZones",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Unique id of the country",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country zones response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZoneResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/customers": {
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Create customers",
                "description": "Create customers",
                "operationId": "createCustomers",
                "requestBody": {
                    "description": "Customer object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "customer_uid": {
                                            "type": "string"
                                        },
                                        "must_confirm_email": {
                                            "type": "boolean"
                                        },
                                        "require_approval": {
                                            "type": "boolean"
                                        },
                                        "list_subscribe_result": {
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/delivery-servers": {
            "get": {
                "tags": [
                    "delivery_servers"
                ],
                "summary": "View delivery servers",
                "description": "View delivery servers",
                "operationId": "viewDeliveryServers",
                "responses": {
                    "200": {
                        "description": "Delivery servers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryServerResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/delivery-servers/{server_id}": {
            "get": {
                "tags": [
                    "delivery_servers"
                ],
                "summary": "View delivery server",
                "description": "View delivery server",
                "operationId": "viewDeliveryServer",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "path",
                        "description": "Unique id of the delivery server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery server response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryServerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/fields": {
            "get": {
                "tags": [
                    "list_fields"
                ],
                "summary": "View list fields",
                "description": "View list fields",
                "operationId": "viewListFields",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List fields response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFieldResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "list_fields"
                ],
                "summary": "Create a list field",
                "description": "Create a list field",
                "operationId": "createListField",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List field object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ListFieldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "List field create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/fields/{field_id}": {
            "get": {
                "tags": [
                    "list_fields"
                ],
                "summary": "View list field",
                "description": "View list field",
                "operationId": "viewListField",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_id",
                        "in": "path",
                        "description": "Unique id of the field",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List fields response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFieldResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "list_fields"
                ],
                "summary": "Update list field",
                "description": "Update list field",
                "operationId": "updateListField",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_id",
                        "in": "path",
                        "description": "Unique id of the field",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List field object",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ListFieldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List fields update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "list_fields"
                ],
                "summary": "Delete a list field",
                "description": "Delete a list field",
                "operationId": "deleteListField",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_id",
                        "in": "path",
                        "description": "Unique id of the field",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete field response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "lists/fields/types": {
            "get": {
                "tags": [
                    "list_fields"
                ],
                "summary": "Get the list fields types",
                "description": "Get the list fields types",
                "operationId": "listFieldsTypes",
                "responses": {
                    "200": {
                        "description": "List fields types response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFieldTypeResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/segments": {
            "get": {
                "tags": [
                    "list_segments"
                ],
                "summary": "View list segments",
                "description": "View list segments",
                "operationId": "viewListSegments",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List segments response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSegmentResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "list_segments"
                ],
                "summary": "Create a list segment",
                "description": "Create a list segment",
                "operationId": "createListSegment",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List segment object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSegmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "List segment create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "segment_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/segments/{segment_uid}": {
            "get": {
                "tags": [
                    "list_segments"
                ],
                "summary": "View list segment",
                "description": "View list segment",
                "operationId": "viewListSegment",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "segment_uid",
                        "in": "path",
                        "description": "Unique id of the segment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List segments response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSegmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "list_segments"
                ],
                "summary": "Update list segment",
                "description": "Update list segment",
                "operationId": "updateListSegment",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "segment_uid",
                        "in": "path",
                        "description": "Unique id of the segment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List segment object",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSegmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List segments update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "segment_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "list_segments"
                ],
                "summary": "Delete a list segment",
                "description": "Delete a list segment",
                "operationId": "deleteListSegment",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "segment_uid",
                        "in": "path",
                        "description": "Unique id of the segment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete segment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "lists/segments/condition-operators": {
            "get": {
                "tags": [
                    "list_segments"
                ],
                "summary": "Get the list segments conditions operators",
                "description": "Get the list segments conditions operators",
                "operationId": "listSegmentsOperators",
                "responses": {
                    "200": {
                        "description": "List segments conditions operators response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSegmentConditionOperatorResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/subscribers": {
            "get": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "View list subscribers",
                "description": "View list subscribers",
                "operationId": "viewListSubscribers",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the subscriber",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unconfirmed",
                                "confirmed",
                                "blacklisted",
                                "unsubscribed",
                                "unapproved",
                                "disabled",
                                "moved"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List subscribers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSubscriberResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Create a list subscriber",
                "description": "Create a list subscriber",
                "operationId": "createListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List subscriber object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "List subscriber create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "subscriber_uid": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "ip_address": {
                                            "type": "string"
                                        },
                                        "source": {
                                            "type": "string"
                                        },
                                        "date_added": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/subscribers/{subscriber_uid}": {
            "get": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "View list subscriber",
                "description": "View list subscriber",
                "operationId": "viewListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List subscribers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSubscriberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Update list subscriber",
                "description": "Update list subscriber",
                "operationId": "updateListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List subscriber object",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List subscribers update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "subscriber_uid": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "ip_address": {
                                            "type": "string"
                                        },
                                        "source": {
                                            "type": "string"
                                        },
                                        "date_added": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Delete a list subscriber",
                "description": "Delete a list subscriber",
                "operationId": "deleteListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete subscriber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/subscribers/search-by-email": {
            "get": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Search by email",
                "description": "Search by email",
                "operationId": "searchByEmailListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EMAIL",
                        "in": "query",
                        "description": "Email of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List subscribers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "subscriber_uid": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "date_added": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/subscribers/search-by-email-in-all-lists": {
            "get": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Search by email in all lists",
                "description": "Search by email in all lists",
                "operationId": "searchByEmailInAllLists",
                "parameters": [
                    {
                        "name": "EMAIL",
                        "in": "query",
                        "description": "Email of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List subscribers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSubscriberWithListResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/subscribers/search-by-custom-fields": {
            "get": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Search by custom fields",
                "description": "Search by custom fields",
                "operationId": "searchByCustomFieldsListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "custom_fields",
                        "in": "query",
                        "description": "Custom fields",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "example": {
                                "EMAIL": "john@doe.com",
                                "FNAME": "John",
                                "LNAME": "Doe"
                            },
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List subscribers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSubscriberResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/subscribers/{subscriber_uid}/unsubscribe": {
            "put": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Unsubscribe list subscriber",
                "description": "Unsubscribe list subscriber",
                "operationId": "unsubscribeListSubscriber",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber_uid",
                        "in": "path",
                        "description": "Unique id of the subscriber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unsubscribe subscriber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/subscribers/unsubscribe-by-email-from-all-lists": {
            "put": {
                "tags": [
                    "list_subscribers"
                ],
                "summary": "Unsubscribe list subscriber from all lists by email",
                "description": "Unsubscribe list subscriber from all lists by email",
                "operationId": "unsubscribeByEmailFromAllLists",
                "requestBody": {
                    "description": "List subscriber email",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "EMAIL"
                                ],
                                "properties": {
                                    "EMAIL": {
                                        "description": "The email address of the subscriber",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Unsubscribe subscriber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists": {
            "get": {
                "tags": [
                    "lists"
                ],
                "summary": "View lists",
                "description": "View lists",
                "operationId": "viewLists",
                "responses": {
                    "200": {
                        "description": "Lists response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListsResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "lists"
                ],
                "summary": "Create list",
                "description": "Create list",
                "operationId": "createList",
                "requestBody": {
                    "description": "List object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ListsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "List response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "list_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}": {
            "get": {
                "tags": [
                    "lists"
                ],
                "summary": "View list",
                "description": "View list",
                "operationId": "viewList",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "lists"
                ],
                "summary": "Update list",
                "description": "Update list",
                "operationId": "updateList",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List object",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ListsUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "lists"
                ],
                "summary": "Delete a list",
                "description": "Delete a list",
                "operationId": "deleteList",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete list response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/lists/{list_uid}/copy": {
            "post": {
                "tags": [
                    "lists"
                ],
                "summary": "Copy list",
                "description": "Copy list",
                "operationId": "copyList",
                "parameters": [
                    {
                        "name": "list_uid",
                        "in": "path",
                        "description": "Unique id of the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List copy response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "list_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/templates": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "View templates",
                "description": "View templates",
                "operationId": "viewTemplates",
                "responses": {
                    "200": {
                        "description": "Template response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "templates"
                ],
                "summary": "Create template",
                "description": "Create template",
                "operationId": "createTemplate",
                "requestBody": {
                    "description": "Template object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Template response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "template_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/templates/{template_uid}": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "View template",
                "description": "View template",
                "operationId": "viewTemplate",
                "parameters": [
                    {
                        "name": "template_uid",
                        "in": "path",
                        "description": "Unique id of the template",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "templates"
                ],
                "summary": "Update template",
                "description": "Update template",
                "operationId": "updateTemplate",
                "parameters": [
                    {
                        "name": "template_uid",
                        "in": "path",
                        "description": "Unique id of the template",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Template object",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Template update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "templates"
                ],
                "summary": "Delete a template",
                "description": "Delete a template",
                "operationId": "deleteTemplate",
                "parameters": [
                    {
                        "name": "template_uid",
                        "in": "path",
                        "description": "Unique id of the template",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete template response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/transactional-emails": {
            "get": {
                "tags": [
                    "transactional_emails"
                ],
                "summary": "View transactional emails",
                "description": "View transactional emails",
                "operationId": "viewTransactionalEmails",
                "responses": {
                    "200": {
                        "description": "Transactional email response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionalEmailResponseCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "transactional_emails"
                ],
                "summary": "Create email",
                "description": "Create transactional email",
                "operationId": "createTransactionalEmail",
                "requestBody": {
                    "description": "Transactional email object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionalEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transactional email response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "email_uid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/transactional-emails/{email_uid}": {
            "get": {
                "tags": [
                    "transactional_emails"
                ],
                "summary": "View email",
                "description": "View email",
                "operationId": "viewTransactionalEmail",
                "parameters": [
                    {
                        "name": "email_uid",
                        "in": "path",
                        "description": "Unique id of the email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactional email response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionalEmailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "transactional_emails"
                ],
                "summary": "Delete a email",
                "description": "Delete a email",
                "operationId": "deleteTransactionalEmail",
                "parameters": [
                    {
                        "name": "email_uid",
                        "in": "path",
                        "description": "Unique id of the email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete email response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponse": {
                "title": "Api response",
                "description": "Api response",
                "properties": {
                    "status": {
                        "description": "Response status",
                        "type": "string",
                        "enum": [
                            "success",
                            "error"
                        ]
                    }
                },
                "type": "object"
            },
            "ApiResponseDataCollection": {
                "title": "Api response data collection",
                "description": "Api response data collection",
                "properties": {
                    "count": {
                        "title": "Count",
                        "description": "Count",
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_page": {
                        "title": "Current page",
                        "description": "Current page",
                        "type": "integer",
                        "format": "int64"
                    },
                    "next_page": {
                        "title": "Next page",
                        "description": "Next page",
                        "type": "integer",
                        "format": "int64"
                    },
                    "prev_page": {
                        "title": "Previous page",
                        "description": "Previous page",
                        "type": "integer",
                        "format": "int64"
                    },
                    "total_pages": {
                        "title": "Total pages",
                        "description": "Total pages",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "ApiResponseError": {
                "title": "Api response error",
                "description": "Api response error",
                "properties": {
                    "status": {
                        "description": "Response status",
                        "type": "string",
                        "enum": [
                            "error"
                        ],
                        "example": "error"
                    },
                    "error": {
                        "title": "Error",
                        "description": "Error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignBounceRequest": {
                "title": "Campaign bounce request",
                "description": "Campaign bounce request",
                "required": [
                    "bounce_type",
                    "subscriber_uid"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "550 5.7.1 Unfortunately, messages from [XX.XX.XX.XX] weren't sent. "
                    },
                    "bounce_type": {
                        "type": "string",
                        "enum": [
                            "internal",
                            "soft",
                            "hard"
                        ]
                    },
                    "subscriber_uid": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignBounce": {
                "title": "Campaign bounce model",
                "description": "Campaign bounce model",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "550 5.7.1 Unfortunately, messages from [XX.XX.XX.XX] weren't sent. "
                    },
                    "processed": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    "bounce_type": {
                        "type": "string",
                        "enum": [
                            "internal",
                            "soft",
                            "hard"
                        ]
                    },
                    "subscriber": {
                        "properties": {
                            "subscriber_uid": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CampaignBounceResponse": {
                "title": "Campaign bounce response",
                "description": "Campaign bounce response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignBounceResponseData"
                            }
                        }
                    }
                ]
            },
            "CampaignBounceResponseCollection": {
                "title": "Campaign bounce response collection",
                "description": "Campaign bounce response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignBounceResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "CampaignBounceResponseData": {
                "title": "Campaign bounce response data",
                "description": "Campaign bounce response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/CampaignBounce"
                    }
                },
                "type": "object"
            },
            "CampaignBounceResponseDataCollection": {
                "title": "Campaign bounce response data collection",
                "description": "Campaign bounce response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CampaignBounce"
                                }
                            }
                        }
                    }
                ]
            },
            "CampaignComplaintRequest": {
                "title": "Campaign complaint request",
                "description": "Campaign complaint request",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignComplaint": {
                "title": "Campaign complaint model",
                "description": "Campaign complaint model",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "subscriber": {
                        "properties": {
                            "subscriber_uid": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CampaignComplaintResponse": {
                "title": "Campaign complaint response",
                "description": "Campaign complaint response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignComplaintResponseData"
                            }
                        }
                    }
                ]
            },
            "CampaignComplaintResponseCollection": {
                "title": "Campaign complain response collection",
                "description": "Campaign complaint response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignComplaintResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "CampaignComplaintResponseData": {
                "title": "Campaign complaint response data",
                "description": "Campaign complaint response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/CampaignComplaint"
                    }
                },
                "type": "object"
            },
            "CampaignComplaintResponseDataCollection": {
                "title": "Campaign complaint response data collection",
                "description": "Campaign complaint response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CampaignComplaint"
                                }
                            }
                        }
                    }
                ]
            },
            "CampaignDeliveryLog": {
                "title": "Campaign delivery log model",
                "description": "Campaign delivery log model",
                "properties": {
                    "campaign": {
                        "properties": {
                            "campaign_uid": {
                                "type": "string"
                            },
                            "list": {
                                "properties": {
                                    "list_uid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "subscriber": {
                        "properties": {
                            "subscriber_uid": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "type": "string",
                        "example": "OK"
                    },
                    "retries": {
                        "type": "integer",
                        "example": "0"
                    },
                    "max_retries": {
                        "type": "integer",
                        "example": "3"
                    },
                    "email_message_id": {
                        "type": "string"
                    },
                    "delivery_confirmed": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "yes"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "success",
                            "error",
                            "fatal-error",
                            "temporary-error",
                            "blacklisted",
                            "suppressed",
                            "giveup",
                            "blocked",
                            "ds-dp-reject",
                            "hdl-by-sg-cmp"
                        ],
                        "example": "success"
                    },
                    "date_added": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignDeliveryLogResponse": {
                "title": "Campaign delivery log response",
                "description": "Campaign delivery log response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignsTrackUrlResponseData"
                            }
                        }
                    }
                ]
            },
            "CampaignDeliveryLogResponseCollection": {
                "title": "Campaign delivery log response collection",
                "description": "Campaign delivery log response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignUnsubscribeResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "CampaignDeliveryLogResponseData": {
                "title": "Campaign delivery log response data",
                "description": "Campaign delivery log response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/CampaignDeliveryLog"
                    }
                },
                "type": "object"
            },
            "CampaignDeliveryLogResponseDataCollection": {
                "title": "Campaign delivery log response data collection",
                "description": "Campaign delivery log response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CampaignDeliveryLog"
                                }
                            }
                        }
                    }
                ]
            },
            "CampaignUnsubscribe": {
                "title": "Campaign unsubscribe model",
                "description": "Campaign unsubscribe model",
                "properties": {
                    "ip_address": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "date_added": {
                        "type": "string"
                    },
                    "subscriber": {
                        "properties": {
                            "subscriber_uid": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CampaignUnsubscribeResponse": {
                "title": "Campaign unsubscribes response",
                "description": "Campaign unsubscribes response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignsTrackUrlResponseData"
                            }
                        }
                    }
                ]
            },
            "CampaignUnsubscribeResponseCollection": {
                "title": "Campaign unsubscribes response collection",
                "description": "Campaign unsubscribes response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignUnsubscribeResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "CampaignUnsubscribeResponseData": {
                "title": "Campaign unsubscribes response data",
                "description": "Campaign unsubscribes response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/CampaignUnsubscribe"
                    }
                },
                "type": "object"
            },
            "CampaignUnsubscribeResponseDataCollection": {
                "title": "Campaign unsubscribes response data collection",
                "description": "Campaign unsubscribes response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CampaignUnsubscribe"
                                }
                            }
                        }
                    }
                ]
            },
            "BaseCampaignRequest": {
                "title": "Base campaign request",
                "properties": {
                    "campaign[name]": {
                        "title": "Name",
                        "description": "The name of the campaign",
                        "type": "string"
                    },
                    "campaign[type]": {
                        "title": "Type",
                        "description": "The type of the campaign",
                        "type": "string",
                        "enum": [
                            "regular",
                            "autoresponder"
                        ],
                        "nullable": true
                    },
                    "campaign[status]": {
                        "title": "Status",
                        "description": "The status of the campaign. Default is pending-sending",
                        "type": "string",
                        "enum": [
                            "pending-sending",
                            "draft",
                            "paused"
                        ],
                        "nullable": true
                    },
                    "campaign[from_name]": {
                        "title": "From name",
                        "description": "Campaign from name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "campaign[from_email]": {
                        "title": "From email",
                        "description": "Campaign from email",
                        "type": "string",
                        "example": "john.doe@domain.com"
                    },
                    "campaign[subject]": {
                        "title": "Subject",
                        "description": "Campaign subject",
                        "type": "string",
                        "example": "Hey, I am testing the campaigns via API"
                    },
                    "campaign[reply_to]": {
                        "title": "Reply to",
                        "description": "Campaign reply to",
                        "type": "string",
                        "example": "john.doe@doe.com"
                    },
                    "campaign[send_at]": {
                        "title": "Send at",
                        "description": "Campaign send date. This will use the timezone which customer selected",
                        "type": "string",
                        "example": "2024-02-20 20:00:00"
                    },
                    "campaign[list_uid]": {
                        "title": "List unique id",
                        "description": "Campaign list unique id",
                        "type": "string"
                    },
                    "campaign[segment_uid]": {
                        "title": "List segment unique id",
                        "description": "Campaign list segment unique id",
                        "type": "string"
                    },
                    "campaign[group_uid]": {
                        "title": "Campaign group",
                        "description": "Campaign group unique id.",
                        "type": "string",
                        "nullable": true
                    },
                    "campaign[template][archive]": {
                        "title": "Archive",
                        "description": "A zip file containing the template arhive. Please encode it in base64 before sending the request.",
                        "type": "string"
                    },
                    "campaign[template][template_uid]": {
                        "title": "Template unique id",
                        "description": "Template unique id",
                        "type": "string"
                    },
                    "campaign[template][content]": {
                        "title": "Template content",
                        "description": "Template content. Please encode it in base64 before sending the request.",
                        "type": "string"
                    },
                    "campaign[template][inline_css]": {
                        "title": "Make the template css inline",
                        "description": "Make the template css inline",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    "campaign[template][plain_text]": {
                        "title": "The plain text content",
                        "description": "The plain text content. Leave empty to autogenerate",
                        "type": "string"
                    },
                    "campaign[template][auto_plain_text]": {
                        "title": "Auto create the plain text version",
                        "description": "Auto create the plain text version",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    "campaign[options][url_tracking]": {
                        "title": "Enable url tracking",
                        "description": "Enable url tracking",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "yes"
                    },
                    "campaign[options][tracking_domain_id]": {
                        "title": "Tracking domain id",
                        "description": "Tracking domain id",
                        "type": "integer"
                    },
                    "campaign[options][json_feed]": {
                        "title": "Json feed",
                        "description": "Json feed",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "no"
                    },
                    "campaign[options][xml_feed]": {
                        "title": "Xml feed",
                        "description": "Xml feed",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "no"
                    },
                    "campaign[options][plain_text_email]": {
                        "title": "Plain text email",
                        "description": "Enable/Disable the plain text email",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "yes"
                    },
                    "campaign[options][email_stats]": {
                        "title": "Email stats",
                        "description": "A valid email address where the stats will be sent",
                        "type": "string",
                        "nullable": "true"
                    },
                    "campaign[options][autoresponder_event]": {
                        "title": "Autoresponder event",
                        "description": "Autoresponder event. Only for the autoresponders",
                        "type": "string",
                        "enum": [
                            "AFTER-SUBSCRIBE",
                            "AFTER-SUBSCRIBE",
                            "AFTER-CAMPAIGN-OPEN"
                        ]
                    },
                    "campaign[options][autoresponder_time_unit]": {
                        "title": "Autoresponder time unit",
                        "description": "Autoresponder time unit. Only for the autoresponders",
                        "type": "string",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                        ]
                    },
                    "campaign[options][autoresponder_time_value]": {
                        "title": "Autoresponder time value",
                        "description": "Autoresponder time value. Only for the autoresponders",
                        "type": "integer"
                    },
                    "campaign[options][autoresponder_open_campaign_id]": {
                        "title": "Autoresponder open campaign id",
                        "description": "Autoresponder open campaign id. Only if event is AFTER-CAMPAIGN-OPEN. This is the id of the campaign that will trigger this event. Only for the autoresponders",
                        "type": "integer"
                    },
                    "campaign[options][cronjob_enabled]": {
                        "title": "Advanced recurring",
                        "description": "Enable/Disable advanced recurring. Only for regular campaigns",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "campaign[options][cronjob]": {
                        "title": "Cronjob frequency",
                        "description": "Only if this campaign is advanced recurring (cronjob_enabled is set to 1), you can set a cron job style frequency.",
                        "type": "string",
                        "example": "0 0 * * *"
                    },
                    "campaign[delivery_servers]": {
                        "title": "Campaign delivery servers",
                        "description": "Campaign delivery servers ids, comma separated.",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CampaignRequest": {
                "title": "Campaign request",
                "description": "Campaign request",
                "required": [
                    "campaign[name]",
                    "campaign[from_name]",
                    "campaign[from_email]",
                    "campaign[subject]",
                    "campaign[reply_to]",
                    "campaign[send_at]",
                    "campaign[list_uid]"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCampaignRequest"
                    }
                ]
            },
            "CampaignUpdateRequest": {
                "title": "Campaign update request",
                "description": "Campaign update request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCampaignRequest"
                    }
                ]
            },
            "Campaign": {
                "title": "Campaign model",
                "description": "Campaign model",
                "properties": {
                    "campaign_uid": {
                        "type": "string"
                    },
                    "campaign_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "regular",
                            "autoresponder"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "pending-sending",
                            "sending",
                            "sent",
                            "processing",
                            "paused",
                            "pending-delete",
                            "blocked",
                            "pending-approve"
                        ]
                    },
                    "group": {
                        "properties": {
                            "group_uid": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CampaignDetail": {
                "title": "Campaign detail model",
                "description": "Campaign detail model",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    {
                        "properties": {
                            "from_name": {
                                "type": "string"
                            },
                            "from_email": {
                                "type": "string"
                            },
                            "to_name": {
                                "type": "string"
                            },
                            "reply_to": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "date_added": {
                                "type": "string"
                            },
                            "send_at": {
                                "type": "string"
                            },
                            "list": {
                                "properties": {
                                    "list_uid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "subscribers_count": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "segment": {
                                "properties": {
                                    "segment_uid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "subscribers_count": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "CampaignResponse": {
                "title": "Campaign response",
                "description": "Campaign response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignResponseData"
                            }
                        }
                    }
                ]
            },
            "CampaignResponseCollection": {
                "title": "Campaign response collection",
                "description": "Campaign response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "CampaignResponseData": {
                "title": "Campaign response data",
                "description": "Campaign response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/CampaignDetail"
                    }
                },
                "type": "object"
            },
            "CampaignResponseDataCollection": {
                "title": "Campaign response data collection",
                "description": "Campaign response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        }
                    }
                ]
            },
            "CampaignStats": {
                "title": "Campaign stats",
                "description": "Campaign stats",
                "properties": {
                    "campaign_status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "pending-sending",
                            "sending",
                            "sent",
                            "processing",
                            "paused",
                            "pending-delete",
                            "blocked",
                            "pending-approve"
                        ]
                    },
                    "subscribers_count": {
                        "type": "integer"
                    },
                    "processed_count": {
                        "type": "integer"
                    },
                    "delivery_success_count": {
                        "type": "integer"
                    },
                    "delivery_success_rate": {
                        "type": "integer"
                    },
                    "delivery_error_count": {
                        "type": "integer"
                    },
                    "delivery_error_rate": {
                        "type": "integer"
                    },
                    "opens_count": {
                        "type": "integer"
                    },
                    "opens_rate": {
                        "type": "integer"
                    },
                    "unique_opens_count": {
                        "type": "integer"
                    },
                    "unique_opens_rate": {
                        "type": "integer"
                    },
                    "clicks_count": {
                        "type": "integer"
                    },
                    "clicks_rate": {
                        "type": "integer"
                    },
                    "unique_clicks_count": {
                        "type": "integer"
                    },
                    "unique_clicks_rate": {
                        "type": "integer"
                    },
                    "unsubscribes_count": {
                        "type": "integer"
                    },
                    "unsubscribes_rate": {
                        "type": "integer"
                    },
                    "complaints_count": {
                        "type": "integer"
                    },
                    "complaints_rate": {
                        "type": "integer"
                    },
                    "bounces_count": {
                        "type": "integer"
                    },
                    "bounces_rate": {
                        "type": "integer"
                    },
                    "hard_bounces_count": {
                        "type": "integer"
                    },
                    "hard_bounces_rate": {
                        "type": "integer"
                    },
                    "soft_bounces_count": {
                        "type": "integer"
                    },
                    "soft_bounces_rate": {
                        "type": "integer"
                    },
                    "internal_bounces_count": {
                        "type": "integer"
                    },
                    "internal_bounces_rate": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CampaignStatsResponse": {
                "title": "Campaign stats response",
                "description": "Campaign stats response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignStats"
                            }
                        }
                    }
                ]
            },
            "CampaignsTrackUrlResponse": {
                "title": "Campaign track url response",
                "description": "Campaign track url response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CampaignsTrackUrlResponseData"
                            }
                        }
                    }
                ]
            },
            "CampaignsTrackUrlResponseData": {
                "title": "Campaign track url response data",
                "description": "Campaign track url response data",
                "properties": {
                    "record": {
                        "title": "Record",
                        "description": "Record",
                        "properties": {
                            "track_url": {
                                "type": "string"
                            },
                            "destination": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Country": {
                "title": "Country model",
                "description": "Country model",
                "properties": {
                    "country_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CountryResponseCollection": {
                "title": "Country response collection",
                "description": "Country response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CountryResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "CountryResponseDataCollection": {
                "title": "Country response data collection",
                "description": "Country response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    }
                ]
            },
            "Zone": {
                "title": "Zone model",
                "description": "Zone model",
                "properties": {
                    "zone_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ZoneResponseCollection": {
                "title": "Zone response collection",
                "description": "Zone response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ZoneResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ZoneResponseDataCollection": {
                "title": "Zone response data collection",
                "description": "Zone response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Zone"
                                }
                            }
                        }
                    }
                ]
            },
            "CustomerRequest": {
                "title": "Customer request",
                "description": "Customer request",
                "required": [
                    "customer[first_name]",
                    "customer[last_name]",
                    "customer[email]",
                    "customer[confirm_email]",
                    "customer[password]",
                    "customer[confirm_password]",
                    "customer[timezone]",
                    "customer[birthDate]",
                    "company[name]",
                    "company[country]",
                    "company[address_1]",
                    "company[city]",
                    "company[zip_code]"
                ],
                "properties": {
                    "customer[first_name]": {
                        "title": "First name",
                        "description": "Customer first name",
                        "type": "string"
                    },
                    "customer[last_name]": {
                        "title": "Last name",
                        "description": "Customer last name",
                        "type": "string"
                    },
                    "customer[email]": {
                        "title": "Email",
                        "description": "Customer email",
                        "type": "string"
                    },
                    "customer[confirm_email]": {
                        "title": "Confirm email",
                        "description": "Customer confirm email",
                        "type": "string"
                    },
                    "customer[password]": {
                        "title": "Password",
                        "description": "Customer password",
                        "type": "string"
                    },
                    "customer[confirm_password]": {
                        "title": "Confirm Password",
                        "description": "Confirm password",
                        "type": "string"
                    },
                    "customer[timezone]": {
                        "title": "Timezone",
                        "description": "Customer timezone",
                        "type": "string",
                        "example": "UTC"
                    },
                    "customer[birthDate]": {
                        "title": "Birth date",
                        "description": "Customer birth date. Use Y-m-d format",
                        "type": "string"
                    },
                    "customer[newsletter_consent]": {
                        "title": "Newsletter consent",
                        "description": "Newsletter consent",
                        "type": "string",
                        "example": "Agree to add me to the newsletter"
                    },
                    "company[name]": {
                        "title": "Company name",
                        "description": "Customer company name",
                        "type": "string"
                    },
                    "company[country]": {
                        "title": "Company country",
                        "description": "Customer company country. See the countries endpoint for available countries and their zones",
                        "type": "string",
                        "example": "United States"
                    },
                    "company[zone]": {
                        "title": "Company zone",
                        "description": "Customer company zone. See the countries endpoint for available countries and their zones",
                        "type": "string",
                        "example": "New York"
                    },
                    "company[city]": {
                        "title": "Company city",
                        "description": "Customer company city",
                        "type": "string",
                        "example": "Brooklyn"
                    },
                    "company[zip_code]": {
                        "title": "Company zip code",
                        "description": "Customer company zip code",
                        "type": "string",
                        "example": "11222"
                    },
                    "company[address_1]": {
                        "title": "Company address line 1",
                        "description": "Customer company address line 1",
                        "type": "string"
                    },
                    "company[address_2]": {
                        "title": "Company address line 2",
                        "description": "Customer company address line 2",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeliveryServer": {
                "title": "Delivery server model",
                "description": "Delivery server model",
                "properties": {
                    "server_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "smtp",
                            "smtp-amazon",
                            "smtp-postmastery",
                            "smtp-greenarrow",
                            "smtp-postal",
                            "smtp-mysmtpcom",
                            "smtp-pmta",
                            "smtp-inboxroad",
                            "sendmail",
                            "pickup-directory",
                            "amazon-ses-web-api",
                            "mailgun-web-api",
                            "sendgrid-web-api",
                            "inboxroad-web-api",
                            "elasticemail-web-api",
                            "sparkpost-web-api",
                            "pepipost-web-api",
                            "postmark-web-api",
                            "mailjet-web-api",
                            "mailerq-web-api",
                            "sendinblue-web-api",
                            "brevo-web-api",
                            "tipimail-web-api",
                            "newsman-web-api",
                            "postal-web-api"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "inactive",
                            "active",
                            "disabled",
                            "hidden",
                            "in-use",
                            "pending-delete"
                        ]
                    }
                },
                "type": "object"
            },
            "DeliveryServerResponse": {
                "title": "Delivery server response",
                "description": "Delivery server response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/DeliveryServerResponseData"
                            }
                        }
                    }
                ]
            },
            "DeliveryServerResponseCollection": {
                "title": "Delivery server response collection",
                "description": "Delivery server response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/DeliveryServerResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "DeliveryServerResponseData": {
                "title": "Delivery server response data",
                "description": "Delivery server response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/DeliveryServer"
                    }
                },
                "type": "object"
            },
            "DeliveryServerResponseDataCollection": {
                "title": "Delivery server response data collection",
                "description": "Delivery server response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeliveryServer"
                                }
                            }
                        }
                    }
                ]
            },
            "ListFieldRequest": {
                "title": "List field request",
                "properties": {
                    "type": {
                        "title": "Type",
                        "description": "See the API-URL/lists/fields/types endpoint",
                        "type": "string"
                    },
                    "label": {
                        "title": "Label",
                        "description": "The label of the field",
                        "type": "string"
                    },
                    "tag": {
                        "title": "Tag",
                        "description": "The tag of the field",
                        "type": "string"
                    },
                    "required": {
                        "title": "Required",
                        "description": "Whether this field is required or not",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "no"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "description": "Whether this field is visible or not",
                        "type": "string",
                        "enum": [
                            "visible",
                            "hidden",
                            "none"
                        ],
                        "example": "visible"
                    },
                    "sort_order": {
                        "title": "Sort order",
                        "type": "integer"
                    },
                    "help_text": {
                        "title": "Help text",
                        "type": "string"
                    },
                    "default_value": {
                        "title": "Default value",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "options[0][name]": {
                        "title": "Option name",
                        "description": "Option name",
                        "type": "string",
                        "nullable": "true"
                    },
                    "options[0][value]": {
                        "title": "Option value",
                        "description": "Option value",
                        "type": "string",
                        "nullable": "true"
                    },
                    "options[1][name]": {
                        "title": "Option name",
                        "description": "Option name",
                        "type": "string",
                        "nullable": "true"
                    },
                    "options[1][value]": {
                        "title": "Option value",
                        "description": "Option value",
                        "type": "string",
                        "nullable": "true"
                    },
                    "options[2][name]": {
                        "title": "Option name",
                        "description": "Option name",
                        "type": "string",
                        "nullable": "true"
                    },
                    "options[2][value]": {
                        "title": "Option value",
                        "description": "Option value",
                        "type": "string",
                        "nullable": "true"
                    }
                },
                "type": "object"
            },
            "ListField": {
                "title": "List field model",
                "description": "List field model",
                "properties": {
                    "field_id": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "help_text": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "default_value": {
                        "type": "string"
                    },
                    "required": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "string"
                    },
                    "type": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "identifier": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "list": {
                        "properties": {
                            "list_uid": {
                                "type": "string"
                            },
                            "display_name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ListFieldResponse": {
                "title": "List field response",
                "description": "List field response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListFieldResponseData"
                            }
                        }
                    }
                ]
            },
            "ListFieldResponseCollection": {
                "title": "List field response collection",
                "description": "List field response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListFieldResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListFieldResponseData": {
                "title": "List field response data",
                "description": "List field response data",
                "properties": {
                    "record": {
                        "title": "Record",
                        "description": "Record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListField"
                        }
                    }
                },
                "type": "object"
            },
            "ListFieldResponseDataCollection": {
                "title": "List field response data collection",
                "description": "List field response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListField"
                                }
                            }
                        }
                    }
                ]
            },
            "ListFieldType": {
                "title": "List field type model",
                "description": "List field type model",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListFieldTypeResponseCollection": {
                "title": "List field types response",
                "description": "List field types response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListFieldTypeResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListFieldTypeResponseDataCollection": {
                "title": "List field type response data collection",
                "description": "List field type response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListFieldType"
                                }
                            }
                        }
                    }
                ]
            },
            "ListSegmentRequest": {
                "title": "List segment request",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "The name of the segment",
                        "type": "string"
                    },
                    "operator_match": {
                        "title": "Operator match",
                        "description": "The glue between the conditions.Any for OR or All for AND.",
                        "type": "string",
                        "enum": [
                            "any",
                            "all"
                        ],
                        "example": "any"
                    },
                    "conditions[0][field_id]": {
                        "title": "Condition field id",
                        "description": "Condition field id",
                        "type": "string"
                    },
                    "conditions[0][operator_id]": {
                        "title": "Condition operator id",
                        "description": "Condition operator id. See the API-URL/lists/segments/condition-operators endpoint",
                        "type": "string"
                    },
                    "conditions[0][value]": {
                        "title": "Condition value",
                        "description": "Condition value",
                        "type": "string"
                    },
                    "conditions[1][field_id]": {
                        "title": "Condition field id",
                        "description": "Condition field id",
                        "type": "string"
                    },
                    "conditions[1][operator_id]": {
                        "title": "Condition operator id",
                        "description": "Condition operator id. See the API-URL/lists/segments/condition-operators endpoint",
                        "type": "string"
                    },
                    "conditions[1][value]": {
                        "title": "Condition value",
                        "description": "Condition value",
                        "type": "string"
                    },
                    "conditions[2][field_id]": {
                        "title": "Condition field id",
                        "description": "Condition field id",
                        "type": "string"
                    },
                    "conditions[2][operator_id]": {
                        "title": "Condition operator id",
                        "description": "Condition operator id. See the API-URL/lists/segments/condition-operators endpoint",
                        "type": "string"
                    },
                    "conditions[2][value]": {
                        "title": "Condition value",
                        "description": "Condition value",
                        "type": "string"
                    },
                    "campaign_conditions[0]action": {
                        "title": "Campaign condition action",
                        "description": "Campaign condition action",
                        "type": "string",
                        "enum": [
                            "open",
                            "click"
                        ]
                    },
                    "campaign_conditions[0]campaign_id": {
                        "title": "Campaign condition campaign id",
                        "description": "Campaign condition campaign id",
                        "type": "string"
                    },
                    "campaign_conditions[0]time_comparison_operator": {
                        "title": "Campaign condition time comparison operator",
                        "description": "Campaign condition time comparison operator",
                        "type": "string",
                        "enum": [
                            "lte",
                            "lt",
                            "gte",
                            "gt",
                            "eq"
                        ]
                    },
                    "campaign_conditions[0]time_value": {
                        "title": "Campaign condition time value",
                        "description": "Campaign condition time value",
                        "type": "integer"
                    },
                    "campaign_conditions[0]time_unit": {
                        "title": "Campaign condition time unit",
                        "description": "Campaign condition time unit",
                        "type": "string",
                        "enum": [
                            "day",
                            "month",
                            "year"
                        ]
                    },
                    "campaign_conditions[1]action": {
                        "title": "Campaign condition action",
                        "description": "Campaign condition action",
                        "type": "string",
                        "enum": [
                            "open",
                            "click"
                        ]
                    },
                    "campaign_conditions[1]campaign_id": {
                        "title": "Campaign condition campaign id",
                        "description": "Campaign condition campaign id",
                        "type": "string"
                    },
                    "campaign_conditions[1]time_comparison_operator": {
                        "title": "Campaign condition time comparison operator",
                        "description": "Campaign condition time comparison operator",
                        "type": "string",
                        "enum": [
                            "lte",
                            "lt",
                            "gte",
                            "gt",
                            "eq"
                        ]
                    },
                    "campaign_conditions[1]time_value": {
                        "title": "Campaign condition time value",
                        "description": "Campaign condition time value",
                        "type": "integer"
                    },
                    "campaign_conditions[1]time_unit": {
                        "title": "Campaign condition time unit",
                        "description": "Campaign condition time unit",
                        "type": "string",
                        "enum": [
                            "day",
                            "month",
                            "year"
                        ]
                    },
                    "campaign_conditions[2]action": {
                        "title": "Campaign condition action",
                        "description": "Campaign condition action",
                        "type": "string",
                        "enum": [
                            "open",
                            "click"
                        ]
                    },
                    "campaign_conditions[2]campaign_id": {
                        "title": "Campaign condition campaign id",
                        "description": "Campaign condition campaign id",
                        "type": "string"
                    },
                    "campaign_conditions[2]time_comparison_operator": {
                        "title": "Campaign condition time comparison operator",
                        "description": "Campaign condition time comparison operator",
                        "type": "string",
                        "enum": [
                            "lte",
                            "lt",
                            "gte",
                            "gt",
                            "eq"
                        ]
                    },
                    "campaign_conditions[2]time_value": {
                        "title": "Campaign condition time value",
                        "description": "Campaign condition time value",
                        "type": "integer"
                    },
                    "campaign_conditions[2]time_unit": {
                        "title": "Campaign condition time unit",
                        "description": "Campaign condition time unit",
                        "type": "string",
                        "enum": [
                            "day",
                            "month",
                            "year"
                        ]
                    }
                },
                "type": "object"
            },
            "ListSegment": {
                "title": "List segment model",
                "description": "List segment model",
                "properties": {
                    "segment_uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subscribers_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ListSegmentCampaignCondition": {
                "title": "List segment campaign condition model",
                "description": "List segment campaign condition model",
                "properties": {
                    "action": {
                        "type": "string",
                        "enum": [
                            "click",
                            "open"
                        ]
                    },
                    "campaign_id": {
                        "type": "integer"
                    },
                    "time_comparison_operator": {
                        "type": "string",
                        "enum": [
                            "lte",
                            "lt",
                            "gte",
                            "gt",
                            "eq"
                        ]
                    },
                    "time_value": {
                        "type": "integer"
                    },
                    "time_unit": {
                        "type": "string",
                        "enum": [
                            "day",
                            "month",
                            "year"
                        ]
                    }
                },
                "type": "object"
            },
            "ListSegmentCondition": {
                "title": "List segment condition model",
                "description": "List segment condition model",
                "properties": {
                    "field_id": {
                        "type": "integer"
                    },
                    "operator_id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSegmentConditionOperator": {
                "title": "List segment condition operator model",
                "description": "List segment condition operator model",
                "properties": {
                    "operator_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSegmentConditionOperatorResponseCollection": {
                "title": "List segment condition operator response",
                "description": "List segment condition operator response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListSegmentConditionOperatorResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListSegmentConditionOperatorResponseDataCollection": {
                "title": "List segment condition operator response data collection",
                "description": "List segment condition operator response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListSegmentConditionOperator"
                                }
                            }
                        }
                    }
                ]
            },
            "ListSegmentDetail": {
                "title": "List segment details model",
                "description": "List segment details model",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ListSegment"
                    },
                    {
                        "properties": {
                            "segment_id": {
                                "type": "integer"
                            },
                            "operator_match": {
                                "schema": "string",
                                "type": "string",
                                "enum": [
                                    "any",
                                    "all"
                                ]
                            },
                            "date_added": {
                                "type": "string"
                            },
                            "conditions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListSegmentCondition"
                                }
                            },
                            "campaign_conditions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListSegmentCampaignCondition"
                                }
                            }
                        }
                    }
                ]
            },
            "ListSegmentResponse": {
                "title": "List segment response",
                "description": "List segment response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListSegmentResponseData"
                            }
                        }
                    }
                ]
            },
            "ListSegmentResponseCollection": {
                "title": "List segment response collection",
                "description": "List segment response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListSegmentResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListSegmentResponseData": {
                "title": "List segment response data",
                "description": "List segment response data",
                "properties": {
                    "record": {
                        "title": "Record",
                        "description": "Record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListSegmentDetail"
                        }
                    }
                },
                "type": "object"
            },
            "ListSegmentResponseDataCollection": {
                "title": "List segment response data collection",
                "description": "List segment response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListSegment"
                                }
                            }
                        }
                    }
                ]
            },
            "ListSubscriberRequest": {
                "title": "List subscriber request",
                "required": [
                    "EMAIL"
                ],
                "properties": {
                    "EMAIL": {
                        "title": "Subscriber email",
                        "description": "The email of the subscriber",
                        "type": "string"
                    },
                    "FNAME": {
                        "title": "Subscriber first name",
                        "description": "The first name of the subscriber",
                        "type": "string"
                    },
                    "LNAME": {
                        "title": "Subscriber last name",
                        "description": "The last name of the subscriber",
                        "type": "string"
                    },
                    "details[status]": {
                        "title": "Status",
                        "description": "The subscriber status.",
                        "type": "string",
                        "enum": [
                            "unconfirmed",
                            "confirmed",
                            "blacklisted",
                            "unsubscribed",
                            "unapproved",
                            "disabled",
                            "moved"
                        ]
                    },
                    "details[source]": {
                        "title": "Status",
                        "description": "The subscriber source.",
                        "type": "string",
                        "enum": [
                            "web",
                            "api",
                            "import"
                        ]
                    },
                    "details[ip_address]": {
                        "title": "Subscriber ip address",
                        "description": "The ip address of the subscriber",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSubscriber": {
                "title": "List subscriber model",
                "description": "List subscriber model",
                "properties": {
                    "subscriber_uid": {
                        "title": "Subscriber uid",
                        "description": "The unique id of the subscriber",
                        "type": "string"
                    },
                    "email": {
                        "title": "Subscriber email",
                        "description": "The email of the subscriber",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "description": "The subscriber status.",
                        "type": "string",
                        "enum": [
                            "unconfirmed",
                            "confirmed",
                            "blacklisted",
                            "unsubscribed",
                            "unapproved",
                            "disabled",
                            "moved"
                        ],
                        "example": "confirmed"
                    },
                    "source": {
                        "title": "Source",
                        "description": "The subscriber source.",
                        "type": "string",
                        "enum": [
                            "web",
                            "api",
                            "import"
                        ],
                        "example": "api"
                    },
                    "ip_address": {
                        "title": "Subscriber ip address",
                        "description": "The ip address of the subscriber",
                        "type": "string"
                    },
                    "date_added": {
                        "title": "Subscriber date added",
                        "description": "The date added of the subscriber",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSubscriberResponse": {
                "title": "List subscriber response",
                "description": "List subscriber response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListSubscriberResponseData"
                            }
                        }
                    }
                ]
            },
            "ListSubscriberResponseCollection": {
                "title": "List subscriber response collection",
                "description": "List subscriber response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListSubscriberResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListSubscriberResponseData": {
                "title": "List subscriber response data",
                "description": "List subscriber response data",
                "properties": {
                    "record": {
                        "title": "Record",
                        "description": "Record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListSubscriber"
                        }
                    }
                },
                "type": "object"
            },
            "ListSubscriberResponseDataCollection": {
                "title": "List subscriber response data collection",
                "description": "List subscriber response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListSubscriber"
                                }
                            }
                        }
                    }
                ]
            },
            "ListSubscriberWithList": {
                "title": "List subscriber model with list details",
                "description": "List subscriber model with list details",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ListSubscriber"
                    },
                    {
                        "properties": {
                            "list": {
                                "title": "Subscriber list",
                                "description": "The list of the subscriber",
                                "properties": {
                                    "list_uid": {
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "ListSubscriberWithListResponseCollection": {
                "title": "List subscriber with list response collection",
                "description": "List subscriber with list response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListSubscriberWithListResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListSubscriberWithListResponseDataCollection": {
                "title": "List subscriber with list response data collection",
                "description": "List subscriber with list response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ListSubscriberWithList"
                                }
                            }
                        }
                    }
                ]
            },
            "BaseListsRequest": {
                "title": "Base lists request",
                "properties": {
                    "general[name]": {
                        "title": "Name",
                        "description": "The name of the list",
                        "type": "string"
                    },
                    "general[description]": {
                        "title": "Description",
                        "description": "The description of the list",
                        "type": "string"
                    },
                    "defaults[from_name]": {
                        "title": "From name",
                        "description": "List from name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "defaults[from_email]": {
                        "title": "From email",
                        "description": "List from email",
                        "type": "string",
                        "example": "john.doe@domain.com"
                    },
                    "defaults[subject]": {
                        "title": "Subject",
                        "description": "List subject",
                        "type": "string",
                        "example": "Hey, I am testing the lists via API"
                    },
                    "defaults[reply_to]": {
                        "title": "Reply to",
                        "description": "List reply to",
                        "type": "string",
                        "example": "john.doe@doe.com"
                    },
                    "notifications[subscribe]": {
                        "title": "Notification when new subscriber added",
                        "description": "Notification when new subscriber added",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    "notifications[unsubscribe]": {
                        "title": "Notification when a subscriber unsubscribe",
                        "description": "Notification when a subscriber unsubscribe",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    "notifications[subscribe_to]": {
                        "title": "Subscribe to",
                        "description": "Subscribe to",
                        "type": "string",
                        "example": "john.doe@doe.com"
                    },
                    "notifications[unsubscribe_to]": {
                        "title": "Unsubscribe to",
                        "description": "Unsubscribe to",
                        "type": "string",
                        "example": "john.doe@doe.com"
                    },
                    "company[name]": {
                        "type": "string"
                    },
                    "company[country]": {
                        "type": "string"
                    },
                    "company[address_1]": {
                        "type": "string"
                    },
                    "company[address_2]": {
                        "type": "string"
                    },
                    "company[zone_name]": {
                        "type": "string"
                    },
                    "company[city]": {
                        "type": "string"
                    },
                    "company[zip_code]": {
                        "type": "string"
                    },
                    "company[phone]": {
                        "type": "string"
                    },
                    "company[address_format]": {
                        "type": "string",
                        "example": "[COMPANY_NAME]\\n[COMPANY_ADDRESS_1] [COMPANY_ADDRESS_2]\\n[COMPANY_CITY] [COMPANY_ZONE] [COMPANY_ZIP]\\n[COMPANY_COUNTRY]\\n[COMPANY_WEBSITE]"
                    }
                },
                "type": "object"
            },
            "ListsRequest": {
                "title": "Lists request",
                "description": "Lists request",
                "required": [
                    "general[name]",
                    "general[description]",
                    "defaults[from_name]",
                    "defaults[from_email]",
                    "defaults[reply_to]"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseListsRequest"
                    }
                ]
            },
            "ListsUpdateRequest": {
                "title": "List update request",
                "description": "List update request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseListsRequest"
                    }
                ]
            },
            "Lists": {
                "title": "List model",
                "description": "List model",
                "properties": {
                    "general": {
                        "properties": {
                            "list_uid": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "display_name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "defaults": {
                        "properties": {
                            "from_email": {
                                "type": "string"
                            },
                            "from_name": {
                                "type": "string"
                            },
                            "reply_to": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "notifications": {
                        "properties": {
                            "subscribe": {
                                "type": "string",
                                "enum": [
                                    "no",
                                    "yes"
                                ]
                            },
                            "unsubscribe": {
                                "type": "string",
                                "enum": [
                                    "no",
                                    "yes"
                                ]
                            },
                            "subscribe_to": {
                                "type": "string"
                            },
                            "unsubscribe_to": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "company": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "address_1": {
                                "type": "string"
                            },
                            "address_2": {
                                "type": "string"
                            },
                            "zone_name": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "zip_code": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "address_format": {
                                "type": "string",
                                "example": "[COMPANY_NAME]\\n[COMPANY_ADDRESS_1] [COMPANY_ADDRESS_2]\\n[COMPANY_CITY] [COMPANY_ZONE] [COMPANY_ZIP]\\n[COMPANY_COUNTRY]\\n[COMPANY_WEBSITE]"
                            },
                            "country": {
                                "properties": {
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ListsResponse": {
                "title": "List response",
                "description": "List response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListsResponseData"
                            }
                        }
                    }
                ]
            },
            "ListsResponseCollection": {
                "title": "Lists response collection",
                "description": "Lists response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ListsResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "ListsResponseData": {
                "title": "List response data",
                "description": "List response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/Lists"
                    }
                },
                "type": "object"
            },
            "ListsResponseDataCollection": {
                "title": "Lists response data collection",
                "description": "Lists response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Lists"
                                }
                            }
                        }
                    }
                ]
            },
            "TemplateRequest": {
                "title": "Template request",
                "required": [
                    "template[name]"
                ],
                "properties": {
                    "template[name]": {
                        "title": "Name",
                        "description": "The name of the template",
                        "type": "string"
                    },
                    "template[content]": {
                        "title": "Template content",
                        "description": "Template content. Please encode it in base64 before sending the request.",
                        "type": "string"
                    },
                    "template[archive]": {
                        "title": "Archive",
                        "description": "A zip file containing the template arhive. Please encode it in base64 before sending the request.",
                        "type": "string"
                    },
                    "template[inline_css]": {
                        "title": "Make the template css inline",
                        "description": "Make the template css inline",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    }
                },
                "type": "object"
            },
            "Template": {
                "title": "Template model",
                "description": "Template model",
                "properties": {
                    "template_uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "screenshot": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TemplateResponse": {
                "title": "Template response",
                "description": "Template response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/TemplateResponseData"
                            }
                        }
                    }
                ]
            },
            "TemplateResponseCollection": {
                "title": "Template response collection",
                "description": "Template response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/TemplateResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "TemplateResponseData": {
                "title": "Template response data",
                "description": "Template response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/Template"
                    }
                },
                "type": "object"
            },
            "TemplateResponseDataCollection": {
                "title": "Template response data collection",
                "description": "Template response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    }
                ]
            },
            "TransactionalEmailRequest": {
                "title": "Transactional email request",
                "required": [
                    "email[to_name]",
                    "email[to_email]",
                    "email[from_name]",
                    "email[subject]",
                    "email[body]",
                    "email[send_at]"
                ],
                "properties": {
                    "email[to_name]": {
                        "title": "To name",
                        "description": "The to name",
                        "type": "string"
                    },
                    "email[to_email]": {
                        "title": "To email",
                        "description": "The to email",
                        "type": "string"
                    },
                    "email[from_name]": {
                        "title": "The from name",
                        "description": "The from name",
                        "type": "string"
                    },
                    "email[from_email]": {
                        "title": "From email",
                        "description": "The from email",
                        "type": "string"
                    },
                    "email[reply_to_name]": {
                        "title": "The reply to name",
                        "description": "The reply to name",
                        "type": "string"
                    },
                    "email[reply_to_email]": {
                        "title": "Reply to email",
                        "description": "The reply to email",
                        "type": "string"
                    },
                    "email[subject]": {
                        "title": "Transactional email subject",
                        "description": "Transactional email subject.",
                        "type": "string"
                    },
                    "email[body]": {
                        "title": "Transactional email body",
                        "description": "Transactional email body. Please encode it in base64 before sending the request.",
                        "type": "string"
                    },
                    "email[plain_text]": {
                        "title": "Transactional email plain text",
                        "description": "Transactional email plain text.",
                        "type": "string"
                    },
                    "email[send_at]": {
                        "title": "Transactional email send at. UTC date time in the format 'Y-m-d H:i:s'.",
                        "description": "Transactional email send at.",
                        "type": "string"
                    },
                    "email[attachments][0][name]": {
                        "description": "File name with extension",
                        "type": "string"
                    },
                    "email[attachments][0][type]": {
                        "description": "MIME type of the file.",
                        "type": "string",
                        "example": "image/png"
                    },
                    "email[attachments][0][data]": {
                        "description": "Base64 encoded file data",
                        "type": "string"
                    },
                    "email[attachments][1][name]": {
                        "description": "File name with extension",
                        "type": "string"
                    },
                    "email[attachments][1][type]": {
                        "description": "MIME type of the file.",
                        "type": "string",
                        "example": "image/png"
                    },
                    "email[attachments][1][data]": {
                        "description": "Base64 encoded file data",
                        "type": "string"
                    },
                    "email[attachments][2][name]": {
                        "description": "File name with extension",
                        "type": "string"
                    },
                    "email[attachments][2][type]": {
                        "description": "MIME type of the file.",
                        "type": "string",
                        "example": "image/png"
                    },
                    "email[attachments][2][data]": {
                        "description": "Base64 encoded file data",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransactionalEmail": {
                "title": "Transactional email model",
                "description": "Transactional email model",
                "properties": {
                    "email_uid": {
                        "type": "string"
                    },
                    "customer_uid": {},
                    "to_name": {
                        "title": "To name",
                        "description": "The to name",
                        "type": "string"
                    },
                    "to_email": {
                        "title": "To email",
                        "description": "The to email",
                        "type": "string"
                    },
                    "from_name": {
                        "title": "The from name",
                        "description": "The from name",
                        "type": "string"
                    },
                    "from_email": {
                        "title": "From email",
                        "description": "The from email",
                        "type": "string"
                    },
                    "reply_to_name": {
                        "title": "The reply to name",
                        "description": "The reply to name",
                        "type": "string"
                    },
                    "reply_to_email": {
                        "title": "Reply to email",
                        "description": "The reply to email",
                        "type": "string"
                    },
                    "subject": {
                        "title": "Transactional email subject",
                        "description": "Transactional email subject.",
                        "type": "string"
                    },
                    "body": {
                        "title": "Transactional email body",
                        "description": "Transactional email body. Please encode it in base64 before sending the request.",
                        "type": "string"
                    },
                    "plain_text": {
                        "title": "Transactional email plain text",
                        "description": "Transactional email plain text.",
                        "type": "string"
                    },
                    "priority": {
                        "title": "Transactional email priority",
                        "description": "Transactional email priority.",
                        "type": "integer"
                    },
                    "retries": {
                        "title": "Transactional email retries",
                        "description": "Transactional email retries.",
                        "type": "integer"
                    },
                    "max_retries": {
                        "title": "Transactional email max retries",
                        "description": "Transactional email max retries.",
                        "type": "integer"
                    },
                    "send_at": {
                        "title": "Transactional email send at",
                        "description": "Transactional email send at.",
                        "type": "string"
                    },
                    "fallback_system_servers": {
                        "title": "The template fallback system servers",
                        "description": "The template fallback system servers",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the email. Default is not-sent",
                        "type": "string",
                        "enum": [
                            "unsent",
                            "sent",
                            "failed"
                        ]
                    },
                    "date_added": {
                        "type": "string"
                    },
                    "last_updated": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransactionalEmailResponse": {
                "title": "Transactional email response",
                "description": "Transactional email response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/TransactionalEmailResponseData"
                            }
                        }
                    }
                ]
            },
            "TransactionalEmailResponseCollection": {
                "title": "Transactional email response collection",
                "description": "Transactional email response collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/TransactionalEmailResponseDataCollection"
                            }
                        }
                    }
                ]
            },
            "TransactionalEmailResponseData": {
                "title": "Transactional email response data",
                "description": "Transactional email response data",
                "properties": {
                    "record": {
                        "$ref": "#/components/schemas/TransactionalEmail"
                    }
                },
                "type": "object"
            },
            "TransactionalEmailResponseDataCollection": {
                "title": "Transactional email response data collection",
                "description": "Transactional email response data collection",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApiResponseDataCollection"
                    },
                    {
                        "properties": {
                            "records": {
                                "title": "Records",
                                "description": "Records",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TransactionalEmail"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "name": "X-API-KEY",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "campaign_bounces",
            "description": "Campaigns bounces endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#campaign-bounces"
            }
        },
        {
            "name": "campaign_delivery_logs",
            "description": "Campaigns delivery logs endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#campaign-delivery-logs"
            }
        },
        {
            "name": "campaign_unsubscribes",
            "description": "Campaigns unsubscribes endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#campaign-unsubscribes"
            }
        },
        {
            "name": "campaigns_tracking",
            "description": "Campaigns tracking endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#campaigns-tracking"
            }
        },
        {
            "name": "campaigns",
            "description": "Campaigns endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#campaigns"
            }
        },
        {
            "name": "countries",
            "description": "Countries endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#countries"
            }
        },
        {
            "name": "customers",
            "description": "Customers endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#customers"
            }
        },
        {
            "name": "delivery_servers",
            "description": "Delivery servers endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#delivery-servers"
            }
        },
        {
            "name": "list_fields",
            "description": "List fields endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#fields"
            }
        },
        {
            "name": "list_segments",
            "description": "List segments endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#segments"
            }
        },
        {
            "name": "list_subscribers",
            "description": "List subscribers endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#subscribers"
            }
        },
        {
            "name": "lists",
            "description": "Lists endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#lists"
            }
        },
        {
            "name": "templates",
            "description": "Email templates endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#templates"
            }
        },
        {
            "name": "transactional_emails",
            "description": "Transactional emails endpoint",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://api-docs.mailwizz.com/#transactional-emails"
            }
        }
    ],
    "externalDocs": {
        "description": "API Docs",
        "url": "https://api-docs.mailwizz.com"
    }
}